@model FamilyBudget.WebServer.Data.Models.UserDto;

<!DOCTYPE html>
<html>
<head>
    <style>
        .negative {
            color: red; /* Light red */
        }

        .positive {
            color: green; /* Light green */
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="ms-0 me-0 mt-auto mb-auto">
                    <p class="fs-2 mt-5"><strong>Email:</strong> @Model.Email</p>
                    <p class="fs-2 mt-5"><strong>Balance:</strong> @Math.Round(Model.Balance, 2)</p>
                </div>
            </div>
            <div class="col">
                @if (Model.Purchases != null && Model.Purchases.Any())
                {
                    <div id="chart1"></div>
                    <p>
                        <button type="button" onclick="location.href='@Url.Action("GenerateReport", "Users")'" class="btn btn-outline-success">Export report</button>
                    </p>
                }
            </div>
        </div>
    </div>

    <div>
        <h2>Purchase History</h2>
        <p>
            <button type="button" onclick="location.href='@Url.Action("CreatePurchase", "Users")'" class="btn btn-outline-success">Create Purchase</button>
        </p>
        @if (Model.Purchases != null && Model.Purchases.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var purchase in Model.Purchases)
                    {
                        <tr class="@((purchase.Price < 0) ? "negative" : "positive")">
                            <td>@purchase.Name</td>
                            <td>@Math.Round(Math.Abs(purchase.Price), 2)</td>
                            <td>@purchase.Date.ToShortDateString()</td>
                            <td>
                                <button type="button" onclick="location.href='@Url.Action("RemovePurchase", "Users", new { id = purchase.Id })'" class="btn btn-outline-danger">Remove</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No purchases found.</p>
        }
    </div>
</body>
</html>
@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var jsonData = @Html.Raw(Json.Serialize(Model.Purchases.GroupBy(purchase => purchase.Date.Date).Select(g => new {date = g.Key, balance = g.Sum(p => p.Price)}).OrderBy(x => x.date)));

            console.log(jsonData);

            jsonData.forEach((item) => {
                item.Date = new Date(item.date);
            });

            var data = new google.visualization.DataTable();
            data.addColumn('date', 'Date');
            data.addColumn('number', 'Balance');

            let balance = jsonData[0].balance;

            data.addRow([jsonData[0].Date, jsonData[0].balance]);
            
            for (let i = 1; i < jsonData.length; i++) {
                balance += jsonData[i].balance;
                data.addRow([jsonData[i].Date, balance]);
            }
            
            var options = {
                title: 'Balance Flow',
                curveType: 'function',
                legend: { position: 'Price' },
                width: 500,
                height: 400
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart1'));
            chart.draw(data, options);

        }
    </script>
}